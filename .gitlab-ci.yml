workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "external_pull_request_event"'

.shared-windows-runners:
  tags:
  - shared-windows
  - windows
  - windows-1809

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.7

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - Static Analysis
  - Test
  - Docs build
  - Deploy

# ######################################################################################
# Reusable code
# ######################################################################################

.save-test-artifacts:
  needs: []  # allow running in parallel with previous stage
  artifacts:
    paths:
      - htmlcov
      - coverage.xml
      - frozen-requirements.txt
    reports:
      cobertura: coverage.xml
    when: always

.run-for-develop-only:
  # make any job extend from this if it should run only on develop
  rules:
    # Only run when merging to develop branch
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
    - if: '$CI_COMMIT_BRANCH == "develop"'  # Also run for direct commits on develop

.docs-unix-and-artifacts:
  needs: []  # allow running in parallel with previous stage
  script:
    - cd docs
    - make html
  artifacts:
    paths:
      - frozen-requirements.txt

.docs-win-and-artifacts:
  needs: []  # allow running in parallel with previous stage
  script:
    - cd docs
    - .\make.bat html
  artifacts:
    paths:
      - frozen-requirements.txt

# this uses YML anchors syntax to be able to reuse this snippets
# anchor usage https://docs.gitlab.com/ee/ci/yaml/#anchors
# Create an anchor called `pip_install_and_freeze`
.pip-install-and-freeze: &pip_install_and_freeze
  - pip install --upgrade --upgrade-strategy eager -e .
  - pip install -e git+https://gitlab.com/quantify-os/quantify-core@develop#egg=quantify-core
  - pip install --upgrade --upgrade-strategy eager -r requirements_dev.txt
  # save the version of the packages installed for CI debugging
  - pip freeze --all > frozen-requirements.txt; cat frozen-requirements.txt

.unix-before-script-no-install: &unix_before_script_no_install
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - apt update
  - apt install -y xvfb  # Sets up a headless display
  - sleep 3

.upgrade-pip: &upgrade_pip
  - python -V
  - python -m pip --version
  - python -m pip install --upgrade pip

.unix-before-script:
  before_script:
    - *unix_before_script_no_install
    - *pip_install_and_freeze

.win-before-script-3.7.9:
  # version 3.7.10 not available on chocolatey
  before_script:
    - choco install python --version=3.7.9 -y -f
    - $env:PATH+=";C:\Python37;C:\Python37\Scripts"
    - *upgrade_pip
    - *pip_install_and_freeze

.win-before-script-3.8.9:
  before_script:
    - choco install python --version=3.8.9 -y -f
    - $env:PATH+=";C:\Python38;C:\Python38\Scripts"
    - *upgrade_pip
    - *pip_install_and_freeze

.win-before-script-latest:
  before_script:
    # For latest we do not specify a version
    # choco does not allow to specify a minor version (--version=3.9 does not work)
    - choco install python -y -f
    # assume here the latest is 3.9 will fail when a 3.10 is available
    - $env:PATH+=";C:\Python39;C:\Python39\Scripts"
    - *upgrade_pip
    - *pip_install_and_freeze

.pytest-command: &pytest_command
  - pytest -n 2 --mpl --mpl-baseline-path=tests/baseline_images -s --cov=quantify_scheduler --cov-report xml --cov-report html --cov-report term --cov-config=.coveragerc --color=yes

.unix-run-pytest:
  script:
    - *pytest_command
    # send the coverage.xml file to codacy
    - bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r coverage.xml

.win-run-pytest:
  script:
    - *pytest_command

# ######################################################################################
# Test Unix
# ######################################################################################

# test-unix-3.7:
#   stage: Test
#   image: "python:3.7"
#   extends:
#     - .unix-before-script
#     - .unix-run-pytest
#     - .save-test-artifacts
#     - .run-for-develop-only

# test-unix-3.8:
#   stage: Test
#   image: "python:3.8"
#   extends:
#     - .unix-before-script
#     - .unix-run-pytest
#     - .save-test-artifacts

# test-unix-latest:
#   stage: Test
#   image: "python:latest"
#   extends:
#     - .unix-before-script
#     - .unix-run-pytest
#     - .save-test-artifacts
#     - .run-for-develop-only
#   allow_failure: true

# alternative-install-unix:
#   needs: []  # allow running in parallel with previous stage
#   stage: Test
#   extends:
#     - .run-for-develop-only
#   script:
#     - *unix_before_script_no_install
#     - python setup.py bdist_wheel
#     # an alternative approach is to install and run:
#     - pip install dist/*
#     # run the command here
#   artifacts:
#     paths:
#       - dist/*.whl

# ######################################################################################
# Test Windows
# ######################################################################################

# test-win-3.7.9:
#   stage: Test
#   extends:
#     - .shared-windows-runners
#     - .win-before-script-3.7.9
#     - .win-run-pytest
#     - .save-test-artifacts
#     - .run-for-develop-only

test-win-3.8.9:
  stage: Test
  extends:
    - .shared-windows-runners
    - .win-before-script-3.8.9
    - .win-run-pytest
    - .save-test-artifacts
    - .run-for-develop-only

# test-win-latest:
#   stage: Test
#   extends:
#     - .shared-windows-runners
#     - .win-before-script-latest
#     - .win-run-pytest
#     - .save-test-artifacts
#     - .run-for-develop-only
#   # latest version always allowed to fail due to unforeseen changes
#   allow_failure: true

# ######################################################################################
# Docs build Unix
# ######################################################################################

# docs-unix-make-html-3.7:
#   stage: Docs build
#   image: "python:3.7"
#   extends:
#     - .unix-before-script
#     - .docs-unix-and-artifacts
#     - .run-for-develop-only

# docs-unix-make-html-3.8:
#   stage: Docs build
#   image: "python:3.8"
#   extends:
#     - .unix-before-script
#     - .docs-unix-and-artifacts
#     - .run-for-develop-only

# docs-unix-make-html-latest:
#   stage: Docs build
#   image: "python:latest"
#   extends:
#     - .unix-before-script
#     - .docs-unix-and-artifacts
#     - .run-for-develop-only
#   # latest version always allowed to fail due to unforeseen changes
#   allow_failure: true

# ######################################################################################
# Docs build Windows
# ######################################################################################

# docs-win-make-html-3.7.9:
#   stage: Docs build
#   extends:
#     - .shared-windows-runners
#     - .win-before-script-3.7.9
#     - .docs-win-and-artifacts
#     - .run-for-develop-only

# docs-win-make-html-3.8.9:
#   stage: Docs build
#   extends:
#     - .shared-windows-runners
#     - .win-before-script-3.8.9
#     - .docs-win-and-artifacts
#     - .run-for-develop-only
#   # Allowed to fail due to asyncio problems (quantify-core#182)
#   allow_failure: true

# docs-win-make-html-latest:
#   stage: Docs build
#   extends:
#     - .shared-windows-runners
#     - .win-before-script-latest
#     - .docs-win-and-artifacts
#     - .run-for-develop-only
#   # Allowed to fail due to asyncio problems (quantify-core#182)
#   allow_failure: true

# ######################################################################################
# Static Analysis
# ######################################################################################

# black:
#   stage: Static Analysis
#   image: python:3.8
#   extends:
#     - .unix-before-script
#   script:
#     - black --check --fast .
